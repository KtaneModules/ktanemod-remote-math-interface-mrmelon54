on: [ push, pull_request ]
name: Build
jobs:
  build:
    strategy:
      matrix:
        go-version: [ 1.21.x ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - uses: knicknic/os-specific-run@v1
        with:
          linux: |
            sudo dpkg --add-architecture i386
            sudo apt-get update
            sudo apt-get install -y \
              gcc-i686-linux-gnu gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf \
              libc6-dev:i386 libc6-dev-arm64-cross libc6-dev-armhf-cross
            export CGO_ENABLED=1
            export GOOS=linux
            GOARCH=amd64 go build -o dist/libktanemod-remote-math-interface-linux-amd64.so -buildmode=c-shared .
            GOARCH=386 CC=i686-linux-gnu-gcc go build -o dist/libktanemod-remote-math-interface-linux-386.so -buildmode=c-shared .
            GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o dist/libktanemod-remote-math-interface-linux-arm64.so -buildmode=c-shared .
            GOARCH=arm CC=arm-linux-gnueabihf-gcc go build -o dist/libktanemod-remote-math-interface-linux-arm.so -buildmode=c-shared .
          windows: |
            $env:CGO_ENABLED=1
            $env:GOOS="windows"

            Write-Host "Building for amd64"
            $env:GOARCH="amd64"
            go build -o "dist/ktanemod-remote-math-interface-windows-amd64.dll" -buildmode=c-shared .

            Write-Host "Building for 386"
            $env:GOARCH="386"
            $env:CC = "i686-w64-mingw32-gcc"
            go build -o "dist/ktanemod-remote-math-interface-windows-386.dll" -buildmode=c-shared .
          macos: |
            export CGO_ENABLED=1
            export GOOS=darwin
            export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
            GOARCH=amd64 go build -o dist/ktanemod-remote-math-interface-darwin-amd64.dylib -buildmode=c-shared .
            GOARCH=arm64 go build -o dist/ktanemod-remote-math-interface-darwin-arm64.dylib -buildmode=c-shared .
      - uses: actions/upload-artifact@v2.2.1
        with:
          name: dist
          path: dist

  release:
    name: Release binaries
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Create Release and Attach Binaries
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -x
          assets=()
          for asset in ./dist/*; do
            assets+=("$asset")
          done
          githubref=${{ github.ref }}
          version="${githubref##*/}"
          gh release create "${version}" -t "${version}"
          gh release upload "${version}" "${assets[@]}"
