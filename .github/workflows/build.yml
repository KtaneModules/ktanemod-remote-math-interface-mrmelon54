on: [ push, pull_request ]
name: Build
jobs:
  build:
    strategy:
      matrix:
        go-version: [ 1.21.x ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - uses: knicknic/os-specific-run@v1
        with:
          linux: go build -o dist/libktanemod-remote-math-interface.so -buildmode=c-shared .
          windows: |
            GOARCH=amd64 go build -o dist/ktanemod-remote-math-interface-x64.dll -buildmode=c-shared .
            GOARCH=386 go build -o dist/ktanemod-remote-math-interface-x86.dll -buildmode=c-shared .
          macos: |
            GOARCH=amd64 go build -o dist/ktanemod-remote-math-interface-amd64.dylib -buildmode=c-shared .
            GOARCH=arm64 go build -o dist/ktanemod-remote-math-interface-arm64.dylib -buildmode=c-shared .
      - uses: actions/upload-artifact@v2.2.1
        with:
          name: bin
          path: bin

  release:
    name: Release binaries
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: bin
          path: bin
      - name: Create a Release
        uses: elgohr/Github-Release-Action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          title: Loading
      - name: Attach binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./bin/*; do
            assets+=("-a" "$asset")
          done
          githubref=${{ github.ref }}
          hub release edit "${assets[@]}" -m "${githubref##*/}" "${githubref##*/}"
